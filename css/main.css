/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}:root{line-height:1}.clearfix::after{clear:both}.clearfix::before,.clearfix::after{display:table;content:""}ul{list-style-type:none;padding:0;margin:0}p{margin:0}h1,h2,h3,.h-subscription{margin-top:-0.1em;margin-bottom:-0.1em}a{text-decoration:none}header{text-shadow:0 0 10px black}header .navbar-menu{color:#f9fafe;font-family:"Raleway",sans-serif;font-size:16px;font-weight:700}header h1{color:#f9fafe;font-family:"Raleway",sans-serif;font-weight:700}@media (min-width: 600px){header h1{font-size:72px}}header .h-subscription{color:#f9fafe;font-family:"Open Sans",sans-serif;font-size:30px;font-weight:400}header form{text-shadow:none}header form input{color:#717171;font-family:"Raleway",sans-serif;font-size:14px;font-weight:400}h2{color:#343435;font-family:"Raleway",sans-serif;font-size:30px;font-weight:400;text-align:center}h2.inverted{color:#f9fafe;font-family:"Raleway",sans-serif;font-size:30px;font-weight:400}.h-subscription{color:#717171;font-family:"Open Sans",sans-serif;font-size:16px;font-weight:400;text-align:center}.destinations .destinations-item .item-counter{color:#343434;font-family:"Open Sans",sans-serif;font-size:30px;font-weight:700}.destinations .destinations-item .item-name{color:#717171;font-family:"Open Sans",sans-serif;font-size:18px;font-weight:400}.destinations .main-container .album .item-place{color:#fff;font-family:"Raleway",sans-serif;font-weight:400}.destinations .main-container .album .item-place .dock-name{font-size:30px}.destinations .main-container .album .item-place .counry{font-size:20px}div.border{height:6px;width:100%;background:url("../images/border.jpg") left center repeat-x}nav{position:relative;color:#f9fafe;margin-left:auto}nav .menu-button{display:block}nav .menu-button i{font-size:37px}nav .navbar-menu{display:none;flex-direction:column;position:absolute;right:-15px;top:67px;padding:12px 0;background-color:rgba(0,0,0,0.65)}nav .navbar-menu a{display:block;padding:12px 39px;color:#f9fafe;font-family:"Raleway",sans-serif;font-size:16px;font-weight:700;line-height:16px}nav .navbar-menu li:hover a,nav .navbar-menu li.active a{color:wheat}@media (min-width: 800px){nav .menu-button{display:none}nav .navbar-menu{display:flex !important;position:static;flex-direction:row;background-color:transparent;padding:0}nav .navbar-menu.dominate li a{border:1px solid transparent;border-radius:5px;color:#f9fafe}nav .navbar-menu li:hover a,nav .navbar-menu li.active a{border-color:#f9fafe}}.button{display:inline-block;border-radius:5px;border:1px solid rgba(38,38,38,0.3);color:#343434;font-family:"Raleway",sans-serif;font-size:14px;font-weight:700;line-height:0.8em;white-space:nowrap}.button.inverted{background-color:#e7434e;color:#fff;border:none}.boats .button{padding:25px 45px}footer .button{padding:15px 35px 17px 38px}.featured-boats .button{padding:25px 50px 25px 48px}.album{display:flex;flex-wrap:wrap;justify-content:center}.album .album-item{position:relative;box-sizing:border-box}.album .album-item .item-info{position:absolute;top:0;bottom:0;left:0;right:0;display:flex;flex-direction:column;justify-content:space-between;align-items:flex-start;padding:22px}@media (min-width: 500px){.album .album-item .item-info{padding:42px}}.album .album-item img{width:100%}.main-container{max-width:1205px;margin:0 auto;padding:0 15px}header{background:url("../images/header-background.png") no-repeat center/cover;text-align:center}header .main-container{max-width:1524px}header .navbar-wrapper{padding:36px 15px;display:flex;justify-content:space-between;align-items:center}header .content-wrapper{padding:50px 0 50px 0}@media (min-width: 600px){header .content-wrapper{padding:181px 0 300px 0}}header .content-wrapper .h-subscription{margin-top:22px}header .content-wrapper form{display:flex;justify-content:center;margin-top:95px;flex-direction:column}header .content-wrapper form input[type='text']{display:block;padding:25px 30px 23px 30px;border:none;border-radius:5px 5px 0 0;max-width:571px;box-sizing:border-box;flex-grow:1}header .content-wrapper form input[type='submit']{display:none}header .content-wrapper form a{display:flex;align-items:center;justify-content:center}header .content-wrapper form a:hover{color:wheat}header .content-wrapper form .button{padding:25px 41px 24px 41px;border-radius:0 0 5px 5px}header .content-wrapper form .button .sailboat-icon{display:inline-block;width:16px;height:16px;margin-right:11px;background:url("../images/sailboat-icon.png") center no-repeat}@media (min-width: 600px){header .content-wrapper form{margin-top:90px;flex-direction:row;align-items:stretch;height:60px}header .content-wrapper form input[type='text']{border-radius:5px 0 0 5px}header .content-wrapper form .button{border-radius:0 5px 5px 0}}.destinations .destinations-list-wrapper{margin:0 auto;max-width:1230px;padding:0 15px}.destinations .destinations-list{text-align:center;display:flex;flex-wrap:wrap;margin:-20px auto 0 auto;padding:30px 0;box-shadow:0 0 30px rgba(52,52,52,0.15);border-radius:5px;background-color:white}.destinations .destinations-list .destinations-item{padding:10px 0 14px 0;box-sizing:border-box;border:1px solid transparent;border-right:1px solid #d4d4d4;border-bottom:1px solid #d4d4d4;width:50%;flex-shrink:0}.destinations .destinations-list .destinations-item:nth-child(2n){border-right:transparent}.destinations .destinations-list .destinations-item:nth-last-child(1),.destinations .destinations-list .destinations-item:nth-last-child(2){border-bottom:transparent}.destinations .destinations-list .item-counter{margin:-0.1em 0}.destinations .destinations-list .item-name{margin:17px 0 -0.1em 0}@media (min-width: 600px){.destinations .destinations-list{margin:-70px auto 0 auto}.destinations .destinations-list.dominate .destinations-item{border:1px solid transparent;border-right:1px solid #d4d4d4;width:25%;border-right:1px solid #d4d4d4}.destinations .destinations-list.dominate .destinations-item:last-child{border-right:transparent}}.destinations .main-container{padding-bottom:80px}.destinations .main-container h2{margin-top:110px}.destinations .main-container .h-subscription{margin-top:30px}.destinations .main-container .album{margin:68px -15px -15px -15px}.destinations .main-container .album .album-item{position:relative;padding:15px}.destinations .main-container .album .album-item .item-counter{z-index:1;display:flex;justify-content:center;align-items:center;padding:13px;border-radius:5px;background-color:#e7434e}.destinations .main-container .album .album-item .item-counter span.boat-icon{display:block;width:16px;height:16px;background:url("../images/sailboat-icon.png") center no-repeat;margin-right:11px}.destinations .main-container .album .album-item .item-counter span.counter{display:block;color:#fff;font-family:"Open Sans",sans-serif;font-size:16px;font-weight:700}.destinations .main-container .album .album-item .photo{position:relative;z-index:1;background-color:black;font-size:0;border-radius:5px}.destinations .main-container .album .album-item .photo a{display:block}.destinations .main-container .album .album-item:hover img{opacity:0.5}.destinations .main-container .album .item-place{z-index:1}.destinations .main-container .album .dock-name{margin-bottom:-0.1em}.destinations .main-container .album .country{margin-top:14px;margin-bottom:-0.1em}.destinations .main-container .button-wrapper{margin-top:98px;text-align:center}.destinations .main-container .button-wrapper .button{padding:25px 43px 24px 43px}.destinations .main-container .button-wrapper .button:hover{box-shadow:0 0 10px 1px gray}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
